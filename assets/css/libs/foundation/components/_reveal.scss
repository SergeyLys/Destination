// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group reveal
////

/// Default background color of a modal.
/// @type Color
$reveal-background: $white !default;

/// Default width of a modal, with no class applied.
/// @type Number
$reveal-width: auto !default;

/// Default maximum width of a modal.
/// @type Number
$reveal-max-width: $global-width !default;

/// Default padding inside a modal.
/// @type Number
$reveal-padding: $global-padding !default;

/// Default border around a modal.
/// @type Number
$reveal-border: 1px solid $medium-gray !default;

/// Default radius for modal.
/// @type Number
$reveal-radius: $global-radius !default;

/// z-index for modals. The overlay uses this value, while the modal itself uses this value plus one.
/// @type Number
$reveal-zindex: 1005 !default;

/// Background color of modal overlays.
/// @type Color
$reveal-overlay-background: rgba(36, 35, 47, 0.8) !default;

/// Adds styles for a modal overlay.
/// @param {Color} $background [$reveal-overlay-background] - Background color of the overlay.
@mixin reveal-overlay($background: $reveal-overlay-background) {
  display: none;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: $reveal-zindex;
  background-color: #fff;
  overflow-y: scroll;
  align-items: center;
  justify-content: center;

  @media only screen
    and (min-device-width: 320px)
    and (max-device-width: 568px)
    and (-webkit-min-device-pixel-ratio: 2) {
    position: fixed;
    z-index: 10;
  }

  @media only screen
    and (min-device-width: 768px)
    and (max-device-width: 1024px)
    and (-webkit-min-device-pixel-ratio: 1) {
    position: fixed;
    z-index: 10;
  }

  @include breakpoint(medium) {
    background-color: $background;
  }
}

/// Adds base styles for a modal.
@mixin reveal-modal-base {
  @include disable-mouse-outline;
  display: none;
  z-index: $reveal-zindex + 1;
  padding: 0;
  background-color: $reveal-background;
  border-radius: $reveal-radius;
  outline: none !important;
  //top: 0 !important;
  justify-content: center;
  //overflow: auto;

  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    //position: absolute;
    //top: 50% !important;
    //left: 50%;
    //overflow: hidden;
    //transform: translateX(-50%) translateY(-50%);
  }

  @include breakpoint(medium) {
    padding: $reveal-padding;
    align-items: center;
    min-height: 0;
    overflow: initial;
  }

  @include breakpoint(large) {
    padding: 0;
  }

  // Make sure rows don't have a min-width on them
  .column,
  .columns {
    min-width: 0;
  }

  // Strip margins from the last item in the modal
  > :last-child {
    margin-bottom: 0;
  }
}

/// Adjusts the width of a modal.
/// @param {Number} $width - Width of the modal. Generally a percentage.
/// @param {Number} $max-width [$reveal-max-width] - Maximum width of the modal.
@mixin reveal-modal-width(
  $width: $reveal-width,
  $max-width: $reveal-max-width
) {
  @include breakpoint(medium) {
    @extend %reveal-centered;
    width: $width;
    max-width: $reveal-max-width;
  }
}

/// Creates a full-screen modal, which stretches the full width and height of the window.
@mixin reveal-modal-fullscreen {
  // scss-lint:disable DuplicateProperty
  top: 0;
  left: 0;
  width: 100%;
  //height: 100%;
  //height: 100vh;
  min-height: 100%;
  max-width: none;
  margin-left: 0;
  border: 0;
  border-radius: 0;

  @media only screen
    and (min-device-width: 320px)
    and (max-device-width: 568px)
    and (-webkit-min-device-pixel-ratio: 2) {
    position: fixed;
    bottom: 0;
    right: 0;
    //min-height: 100vh;
    z-index: 10;
    overflow: auto;
  }

  @media only screen
    and (min-device-width: 768px)
    and (max-device-width: 1024px)
    and (-webkit-min-device-pixel-ratio: 1) {
    position: fixed;
    bottom: 0;
    right: 0;
    //min-height: 100vh;
    z-index: 10;
    overflow: auto;
  }

}

@mixin foundation-reveal {
  // [TODO] Is this necessary?
  // scss-lint:disable QualifyingElement
  body.is-reveal-open {
    overflow: hidden;

    @media only screen
    and (min-device-width: 320px)
    and (max-device-width: 568px)
    and (-webkit-min-device-pixel-ratio: 2) {
      overflow: visible;
    }

    @media only screen
    and (min-device-width: 768px)
    and (max-device-width: 1024px)
    and (-webkit-min-device-pixel-ratio: 1) {
      overflow: visible;
    }
  }
  // html gets this class only in iOS
  html.is-reveal-open,
  html.is-reveal-open body {
    min-height: 100%;
    overflow: hidden;
    user-select: none;

    @media only screen
    and (min-device-width: 320px)
    and (max-device-width: 568px)
    and (-webkit-min-device-pixel-ratio: 2) {
      overflow: visible;
    }

    @media only screen
    and (min-device-width: 768px)
    and (max-device-width: 1024px)
    and (-webkit-min-device-pixel-ratio: 1) {
      overflow: hidden;
      height: 100vh;
    }
  }

  .reveal-title {
    text-align: center;
    margin-top: 20px;
  }

  // Overlay
  .reveal-overlay {
    @include reveal-overlay;
  }

  // Modal container
  .reveal {
    @include reveal-modal-base;
    @include reveal-modal-width($reveal-width);
    position: relative;
    margin-left: auto;
    margin-right: auto;

    .close-button {
      position: absolute;
      top: 15px;
      right: 0;
      color: #000;
      z-index: 1;

      &:before {
        font-size: 24px;
      }

      @include breakpoint(medium) {
        color: $white;
        top: initial;
        right: 0;
        bottom: calc(100% + 25px);
      }

      @include breakpoint(large) {
        left: calc(100% + 25px);
        top: 0;
      }
    }

    &#supportModal {
      //padding: 75px 1rem 50px 1rem;
      //min-height: 100vh;
    }

    &#videoModal {
      padding: 0;
      width: 100%;
      max-width: none;
      height: auto;
      min-height: initial;

      @media (max-width: 767px) {
        overflow: hidden;
      }

      @include breakpoint(xlarge) {
        width: 60%;
      }

      .close-button {
        color: $white;

        @media only screen 
          and (min-device-width: 320px) 
          and (max-device-width: 568px)
          and (-webkit-min-device-pixel-ratio: 2)
          and (orientation: landscape) {
            right: 0;
            top: 25px;
        }

        @media only screen 
          and (min-device-width: 320px) 
          and (max-device-width: 568px)
          and (-webkit-min-device-pixel-ratio: 2)
          and (orientation: portrait) {
            color: $white;
            top: initial;
            right: 0;
            bottom: calc(100% + 25px);
        }
      }
    }

    &.fadeInBottom {
      animation: fadeIn 1s ease;
    }


    // Placeholder selector for medium-and-up modals
    // Prevents duplicate CSS when defining multiple Reveal sizes
    @include breakpoint(medium) {
      %reveal-centered {
        left: auto;
        right: auto;
        margin: 0 auto;
      }
    }

    // Remove padding
    &.collapse {
      padding: 0;
    }

    // Sizing classes
    &.tiny  { @include reveal-modal-width(30%); }
    &.small { @include reveal-modal-width(50%); }
    &.large { @include reveal-modal-width(90%); }

    // Full-screen mode
    &.full {
      @include reveal-modal-fullscreen;
    }

    @include breakpoint($-zf-zero-breakpoint only) {
      @include reveal-modal-fullscreen;
    }

    &.without-overlay {
      position: fixed;
    }
  }
}